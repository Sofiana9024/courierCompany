/*
 * Universidad Politécnica de San Luis Potosí
 * Programación III Java
 * Programación Orientada a Objetos
 * @author Ana Sofía Rodríguez Castillo, 178815@upslp.edu.mx
 */
package paquete;
import cliente.Cliente;
import empleado.Empleado;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * JFrame que proporciona al usuario un espacio para dar de alta un paquete
 * @author Ana Sofía Rodríguez Castillo, 178815@upslp.edu.mx
 * @author Ana Sofía Rodriguez Castillo
 * @author 178815@upslp.edu.mx
 * @version 1.0
 */
public class AltaPkt extends javax.swing.JFrame {
    /**
     * Representa la conexión
     */
    private final Connection con;
    /**
     * Variable de tipo paquete
     */
    private final Paquete paquete;
    /**
     * Variable de tipo cliente
     */
    private final Cliente clienteRef;
    /**
     * Variable de tipo empleado
     */
    private final Empleado empleadoRef;
    /**
     * Variable para almacenar temporalmente el id de empleado
     */
    private int idEmpleado;
    /**
     * Variable para retornar la palabra clave
     */
    private String pclave;
    
    /**
    * Variable que toma el id del cliente referencia
    */
    private int idClienter;
    
    class FondoPanel extends javax.swing.JPanel{
        private java.awt.Image imagen;
        
        @Override
        public void paint(java.awt.Graphics g){
            imagen = new javax.swing.ImageIcon(
            getClass().getResource("/imgPkt/AltaPkt.png")).getImage();
            g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            setOpaque(false);
            super.paint(g);
        }
    }

   /**
     * Creates new form AltaPkt
     * Inicializa algunos de los valores que aparecen en el pane
     * Establece la posicion del pane
     * @param con Conexión
     */
    public AltaPkt(Connection con) {
        this.con = con;
        paquete = new Paquete(this.con);
        clienteRef = new Cliente(this.con);
        empleadoRef = new Empleado(this.con);
        initComponents();
        actualizaTabla();
        
        paquete.obtenerIdPaquete();
        txtIdPkt.setEditable(false);
        txtIdPkt.setText(String.valueOf(paquete.getUltIdPaquete()));
        
        clienteRef.obtenerIdCliente("Activo");
        txtIdCliente.setModel(new javax.swing.DefaultComboBoxModel(clienteRef.getIdCliente()));
        
        empleadoRef.obtenerIdEmpleado("Activo");
        txtIdEmpleado.setModel(new javax.swing.DefaultComboBoxModel(empleadoRef.getIdEmpleado()));
        
        this.setTitle("Alta Paquete");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        /**
        * panel de fondo
        */
        jPanel1 = new FondoPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        txtIdPkt = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JComboBox<>();
        txtDireccion = new javax.swing.JTextField();
        txtPClave = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        txtIdEmpleado = new javax.swing.JComboBox<>();
        txtNomCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        /**
        * Formato de la tabla
        */
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        /**
        * scroll panel
        */
        jScrollPane2.setViewportView(Datos);

        /**
        * No se puede editar el campo
        */
        txtIdPkt.setEditable(false);

        /**
        * se define las propiedades
        */
        txtIdCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        /**
        * evento accionado
        */
        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        /**
        * evento accionado
        */
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionFocusLost(evt);
            }
        });

        /**
        * evento accionado
        */
        txtPClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPClaveActionPerformed(evt);
            }
        });

        /**
        * se define la fuente y propiedades
        */
        btnGuardar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        /**
        * texto que aparece en pantalla
        */
        btnGuardar.setText("Guardar");
        /**
        * evento accionado
        */
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        /**
        * se define las propiedades
        */
        txtIdEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        /**
        * No se puede editar el campo
        */
        txtNomCliente.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(188, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdPkt)
                            .addComponent(txtIdCliente, 0, 190, Short.MAX_VALUE)
                            .addComponent(txtDireccion)
                            .addComponent(txtPClave)
                            .addComponent(txtIdEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNomCliente))
                        .addGap(51, 51, 51)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtIdPkt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtPClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnGuardar)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try{
            if(txtPClave.getText().equals("") || txtDireccion.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Faltan datos por llenar");
            }else{
                idEmpleado = Integer.parseInt(txtIdEmpleado.getSelectedItem().toString());
                paquete.altaPaquete(txtDireccion.getText(), txtPClave.getText(), idClienter, txtNomCliente.getText(), idEmpleado);
                JOptionPane.showMessageDialog(this, "Registro guardado :D");
            }
        }catch(Exception err){
            
        }finally{
            txtDireccion.setText("");
            txtPClave.setText("");
            txtNomCliente.setText("");
            paquete.obtenerIdPaquete();
            txtIdPkt.setText(String.valueOf(paquete.getUltIdPaquete()));
            actualizaTabla();
        }
        actualizaTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusLost
        
    }//GEN-LAST:event_txtDireccionFocusLost

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        idClienter = Integer.parseInt(txtIdCliente.getSelectedItem().toString());
        String resul[] = clienteRef.consultaCliente(idClienter);
        txtDireccion.setText(resul[1]);
        txtNomCliente.setText(resul[0]);
        pclave = paquete.Pclave(txtIdPkt.getText());
        txtPClave.setText(pclave);
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void txtPClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPClaveActionPerformed

    /**
     * Función que actualiza la tabla del paquete, usando la variable de nombre Datos
     */
    public final void actualizaTabla(){
        DefaultTableModel modelo = paquete.actualizaTablaPaquete("", "", 0);
        this.Datos.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
    * Tabla en la que aparecen los datos
    */
    private javax.swing.JTable Datos;
    /**
    * boton que llama al método de alta
    */
    private javax.swing.JButton btnGuardar;
    /**
    * panel de fondo
    */
    private javax.swing.JPanel jPanel1;
    /**
    * scroll panel
    */
    private javax.swing.JScrollPane jScrollPane2;
    /**
    * textfield para ingresar dirección
    */
    private javax.swing.JTextField txtDireccion;
    /**
    * combo box para elegir el idCliente
    */
    private javax.swing.JComboBox<String> txtIdCliente;
    /**
    * combo box para elegir el id de empleado
    */
    private javax.swing.JComboBox<String> txtIdEmpleado;
    /**
    * textfield que muestra el id de paquete
    */
    private javax.swing.JTextField txtIdPkt;
    /**
    * textfield que muestra el nombre de cliente
    */
    private javax.swing.JTextField txtNomCliente;
    /**
    * textfield para ingresar palabra clave
    */
    private javax.swing.JTextField txtPClave;
    // End of variables declaration//GEN-END:variables
}
